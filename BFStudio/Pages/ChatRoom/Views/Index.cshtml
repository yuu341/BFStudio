@model BFStudio.Pages.ChatRoom.Models.ChatRoomModel

@{
    ViewBag.Title = "チャット";
    var signalPath = @BFStudio.Pages.ChatRoom.Signal.ChatConnection.Path;
}

    <script type="text/javascript">
        //$(function () {

        //    //var $table = $("#chat-list");
        //    //var $bodyCells = $table.find('tbody tr:first').children, colWidth;
        //    //// Adjust the width of thead cells when window resizes
        //    //$(window).resize(function () {
        //    //    // Get the tbody columns width array
        //    //    colWidth = $table.find('tbody tr:first').children.map(function () {
        //    //        return $(this).width();
        //    //    }).get();

        //    //    // Set the width of thead columns
        //    //    $table.find('thead tr').children().each(function (i, v) {
        //    //        $(v).width(colWidth[i]);
        //    //    });
        //    //}).resize(); // Trigger resize handler



        //    var con = $.connection("/signal/chat");
        //    con.start(function () {
        //        $("#chat-send").click(function () {
        //            sendMsg(con);
        //        });

        //        $("#chat-msg").keydown(function (e) {
        //            if (e.ctrlKey && e.keyCode == 13) {
        //                sendMsg(con);
        //            }
        //        });
        //    });

        //    con.received(function (data) {

        //        var list = $("#chat-hist tr.last").before("<tr><td>"+data.SEND_USER_NM + "</td><td>" + data.USER_MSG + "</td></tr>");
        //    });

        //});

        var con = $.connection("/signal/chat");
        con.start(function () {
            $("#chat-send").click(function () {
                sendMsg(con);
            });

            $("#chat-msg").keydown(function (e) {
                if (e.ctrlKey && e.keyCode == 13) {
                    sendMsg(con);
                }
            });
        });

        con.received(function (data) {
            var list = $("#chat-hist tr:last").before("<tr><td>" + data.SEND_USER_NM + "</td><td>" + data.USER_MSG + "</td></tr>");
        });


        function sendMsg(con) {
            var sender = $("#chat-send");
            var msgr = $("#chat-msg");
            var msg = msgr.val();

            var obj = {
                CHAT_ID: 0,
                ROOM_ID: 0,
                SEND_USER_ID: 0,
                CREATE_DATE: new Date(),
                SEND_USER_NM: "",
                USER_MSG: msg,

            }
            con.send(obj);

            msgr.val(null);

            msgr.focus();

        }

        //初期化する。未読のチャットがあれば数値をタブに反映する。コネクションが残っている場合は、其の一切を破棄する。
        function initialize() {

        }

        //新しい部屋を作成する
        function create() {
            
        }

        //チャット部屋に人を招待する
        function invite(room_id, user_id) {

        }

        //チャットを開始する
        function chat_start(room_id) {
            
        }

        //チャットを終了する
        function chat_end(room_id) {

        }


    </script>


<div class="col-md-12">
    <div id="chat-rooms" class="col-md-2">
        <table class="table table-striped table-bordered table-hover">
            <tbody>
                @foreach (var room in @Model.RoomList)
                {
                    <tr><td><label>@room.ROOM_NM</label></td></tr>
                }
            </tbody>

        </table>
    </div>
    <div id="chat-main-table" class="pre-scrollable">
    <table id="chat-hist" class="table table-striped table-bordered table-hover">
        <tbody>
                @foreach (var msg in @Model.MessageList)
                {
                    <tr><td><label>@msg.SEND_USER_NM</label></td><td><label>@msg.USER_MSG</label></td></tr>
                }
        </tbody>
    </table>
    </div>
    <div id="user-input-space">
        <input id="chat-msg" class="text-primary" type="text" />
        <input id="chat-send" type="button" class="btn btn-primary" value="送信" />
    </div>
</div>
<div class="col-md-2"></div>